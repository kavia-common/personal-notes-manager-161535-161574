{"is_source_file": true, "format": "TypeScript", "description": "This file defines HTTP request functions and related interfaces for API communication in a frontend project, including request handling, response parsing, and a public API object for HTTP methods.", "external_files": ["./config", "@builder.io/qwik"], "external_methods": ["AppConfig.getApiBaseUrl()", "fetch"], "published": ["ApiResponse", "AuthState", "api"], "classes": [], "methods": [{"name": "async function request<T>( request", "description": "Performs an HTTP request with proper headers, handles JSON and text responses, and manages errors.", "scope": "", "scopeKind": ""}], "calls": ["AppConfig.getApiBaseUrl()", "fetch", "headers.set", "resp.headers.get", "resp.json", "resp.text"], "search-terms": ["http request", "API methods", "json response handling", "typescript HTTP client"], "state": 2, "file_id": 19, "knowledge_revision": 39, "git_revision": "", "ctags": [{"_type": "tag", "name": "ApiResponse", "path": "/home/kavia/workspace/code-generation/personal-notes-manager-161535-161574/notes_frontend/src/lib/http.ts", "pattern": "/^export interface ApiResponse<T> {$/", "language": "TypeScript", "kind": "interface"}, {"_type": "tag", "name": "AuthState", "path": "/home/kavia/workspace/code-generation/personal-notes-manager-161535-161574/notes_frontend/src/lib/http.ts", "pattern": "/^export interface AuthState {$/", "language": "TypeScript", "kind": "interface"}, {"_type": "tag", "name": "api", "path": "/home/kavia/workspace/code-generation/personal-notes-manager-161535-161574/notes_frontend/src/lib/http.ts", "pattern": "/^export const api = {$/", "language": "TypeScript", "kind": "constant"}, {"_type": "tag", "name": "base", "path": "/home/kavia/workspace/code-generation/personal-notes-manager-161535-161574/notes_frontend/src/lib/http.ts", "pattern": "/^  const base = AppConfig.getApiBaseUrl();$/", "language": "TypeScript", "kind": "constant", "scope": "request", "scopeKind": "function"}, {"_type": "tag", "name": "contentType", "path": "/home/kavia/workspace/code-generation/personal-notes-manager-161535-161574/notes_frontend/src/lib/http.ts", "pattern": "/^  const contentType = resp.headers.get(\"content-type\") || \"\";$/", "language": "TypeScript", "kind": "constant", "scope": "request", "scopeKind": "function"}, {"_type": "tag", "name": "data", "path": "/home/kavia/workspace/code-generation/personal-notes-manager-161535-161574/notes_frontend/src/lib/http.ts", "pattern": "/^  data?: T;$/", "language": "TypeScript", "kind": "property", "scope": "ApiResponse", "scopeKind": "interface"}, {"_type": "tag", "name": "err", "path": "/home/kavia/workspace/code-generation/personal-notes-manager-161535-161574/notes_frontend/src/lib/http.ts", "pattern": "/^    const err =$/", "language": "TypeScript", "kind": "constant", "scope": "request", "scopeKind": "function"}, {"_type": "tag", "name": "error", "path": "/home/kavia/workspace/code-generation/personal-notes-manager-161535-161574/notes_frontend/src/lib/http.ts", "pattern": "/^  error?: string;$/", "language": "TypeScript", "kind": "property", "scope": "ApiResponse", "scopeKind": "interface"}, {"_type": "tag", "name": "headers", "path": "/home/kavia/workspace/code-generation/personal-notes-manager-161535-161574/notes_frontend/src/lib/http.ts", "pattern": "/^  const headers = new Headers(options.headers || {});$/", "language": "TypeScript", "kind": "constant", "scope": "request", "scopeKind": "function"}, {"_type": "tag", "name": "ok", "path": "/home/kavia/workspace/code-generation/personal-notes-manager-161535-161574/notes_frontend/src/lib/http.ts", "pattern": "/^  ok: boolean;$/", "language": "TypeScript", "kind": "property", "scope": "ApiResponse", "scopeKind": "interface"}, {"_type": "tag", "name": "request", "path": "/home/kavia/workspace/code-generation/personal-notes-manager-161535-161574/notes_frontend/src/lib/http.ts", "pattern": "/^async function request<T>($/", "language": "TypeScript", "kind": "function"}, {"_type": "tag", "name": "resp", "path": "/home/kavia/workspace/code-generation/personal-notes-manager-161535-161574/notes_frontend/src/lib/http.ts", "pattern": "/^  const resp = await fetch(url, { ...options, headers });$/", "language": "TypeScript", "kind": "constant", "scope": "request", "scopeKind": "function"}, {"_type": "tag", "name": "status", "path": "/home/kavia/workspace/code-generation/personal-notes-manager-161535-161574/notes_frontend/src/lib/http.ts", "pattern": "/^  status: number;$/", "language": "TypeScript", "kind": "property", "scope": "ApiResponse", "scopeKind": "interface"}, {"_type": "tag", "name": "tokenSig", "path": "/home/kavia/workspace/code-generation/personal-notes-manager-161535-161574/notes_frontend/src/lib/http.ts", "pattern": "/^  tokenSig: Signal<string | null>;$/", "language": "TypeScript", "kind": "property", "scope": "AuthState", "scopeKind": "interface"}, {"_type": "tag", "name": "url", "path": "/home/kavia/workspace/code-generation/personal-notes-manager-161535-161574/notes_frontend/src/lib/http.ts", "pattern": "/^  const url = `${base}${path}`;$/", "language": "TypeScript", "kind": "constant", "scope": "request", "scopeKind": "function"}], "hash": "dd027e38820c7ca1cd6cb10b427d5f15", "format-version": 4, "code-base-name": "notes_frontend", "filename": "notes_frontend/src/lib/http.ts", "fields": [{"name": "export interface ApiResponse<T> {", "scope": "", "scopeKind": "", "description": "unavailable"}, {"name": "export interface AuthState {", "scope": "", "scopeKind": "", "description": "unavailable"}, {"name": "data?: T;", "scope": "ApiResponse", "scopeKind": "interface", "description": "unavailable"}, {"name": "error?: string;", "scope": "ApiResponse", "scopeKind": "interface", "description": "unavailable"}, {"name": "ok: boolean;", "scope": "ApiResponse", "scopeKind": "interface", "description": "unavailable"}, {"name": "status: number;", "scope": "ApiResponse", "scopeKind": "interface", "description": "unavailable"}, {"name": "tokenSig: Signal<string | null>;", "scope": "AuthState", "scopeKind": "interface", "description": "unavailable"}], "revision_history": [{"39": ""}]}